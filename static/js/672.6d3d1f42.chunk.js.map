{"version":3,"file":"static/js/672.6d3d1f42.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA6K,0BAA7K,EAAiN,yBAAjN,EAAuP,4BAAvP,EAA4R,wBAA5R,EAAgU,2BAAhU,EAAyW,6B,6BCG5VA,EAAa,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,KAAMC,EAAS,EAATA,IAClC,OACI,gBAAKC,UAAS,UAAKC,EAAL,YAAiBA,GAA/B,UACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKC,IAAKH,EAAKI,IAAI,gBAAgBH,UAAWC,KAC9C,SAAC,KAAD,CAASG,GAAE,mBAAcP,GAAMG,UAAW,qBAAEK,SAAyBJ,EAAe,IAApF,SACKH,UCPRQ,EAAU,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACI,gBAAKP,UAAWC,EAAhB,SAA4BM,K,iDCgCpC,EA1BgB,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,OACvCC,EAAkBJ,EAAQK,KAAI,SAACC,GAAD,OAAO,SAAClB,EAAD,CAAYC,GAAIiB,EAAEjB,GAAIC,KAAMgB,EAAEhB,KAAiBC,IAAKe,EAAEf,KAAbe,EAAEjB,OAChFkB,EAAmBN,EAASI,KAAI,SAACG,GAAD,OAAS,SAACV,EAAD,CAASC,QAASS,EAAIT,SAAcS,EAAInB,OAOvF,OAAKc,GAKD,iBAAKX,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKW,KAEL,iBAAKZ,UAAWC,EAAhB,UACKc,GACD,SAACE,EAAD,CAAqBC,SAhBlB,SAACC,GAEZT,EAAWS,EAAOC,0BAIX,SAAC,KAAD,CAAUhB,GAAG,SAASiB,SAAO,KAoCtCJ,GAAsBK,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,EAjBE,SAACE,GAC3B,IAAOC,EAAgBD,EAAhBC,aACDC,GAAsBC,EAAAA,EAAAA,GAAiB,KAE7C,OACI,kBAAMT,SAAUO,EAAczB,UAAWC,EAAzC,WACI,SAAC2B,EAAA,EAAD,CAAO9B,KAAK,iBACL+B,UAAWC,EAAAA,GACXC,YAAY,sBACZC,KAAK,MAAMC,KAAK,IAChBC,SAAU,CAACC,EAAAA,EAAUT,MAE5B,mBAAQ1B,UAAS,UAAKoC,EAAAA,EAAAA,IAAL,YAAkBA,EAAAA,EAAAA,MAAnC,4B,oBC9BZ,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACC,GACnB,MAAO,CACH/B,QAAS+B,EAAMC,YAAYhC,QAC3BC,SAAU8B,EAAMC,YAAY/B,aAIX,SAACgC,GACtB,MAAO,CACH/B,WAAY,SAACU,GACTqB,GAASC,EAAAA,EAAAA,GAAwBtB,SAOzCuB,EAAAA,EAFJ,CAGEC","sources":["webpack://sn-new/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__qglER\",\"dialogsItems\":\"Dialogs_dialogsItems__FCR95\",\"dialog\":\"Dialogs_dialog__wvucG\",\"active\":\"Dialogs_active__EJ8Dg\",\"messages\":\"Dialogs_messages__mvFJX\",\"message\":\"Dialogs_message__N7Wcz\",\"activeLink\":\"Dialogs_activeLink__m1zb7\",\"avatar\":\"Dialogs_avatar__OeoEI\",\"container\":\"Dialogs_container__MGxNg\",\"messageArea\":\"Dialogs_messageArea__JTsN7\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const DialogItem = ({id, name, ava}) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.activeLink}`}>\r\n            <div className={s.container}>\r\n                <img src={ava} alt='people avatar' className={s.avatar}/>\r\n                <NavLink to={`/dialogs/${id}`} className={({isActive}) => isActive ? s.activeLink : ''}>\r\n                    {name}\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nexport const Message = ({message}) => {\r\n    return (\r\n        <div className={s.message}>{message}</div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport style from '../Profile/MyPosts/MyPosts.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\n\r\nconst Dialogs = ({dialogs, messages, addMessage, isAuth}) => {\r\n    const dialogsElements = dialogs.map((d) => <DialogItem id={d.id} name={d.name} key={d.id} ava={d.ava}/>)\r\n    const messagesElements = messages.map((msg) => <Message message={msg.message} key={msg.id}/>)\r\n\r\n    const submit = (values) => {\r\n        // console.log(values.newMessageBody)\r\n        addMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Navigate to=\"/login\" replace/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={submit}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n\r\nexport const AddMessageForm = (props) => {\r\n    const {handleSubmit} = props\r\n    const maxLengthCreator100 = maxLengthCreator(100)\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.messageArea}>\r\n            <Field name='newMessageBody'\r\n                   component={Textarea}\r\n                   placeholder=\"Add a new message..\"\r\n                   cols=\"100\" rows=\"4\"\r\n                   validate={[required, maxLengthCreator100]}\r\n            />\r\n            <button className={`${style.btn} ${style.btn1}`}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'addMessageForm'})(AddMessageForm)\r\n\r\n","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)"],"names":["DialogItem","id","name","ava","className","s","src","alt","to","isActive","Message","message","dialogs","messages","addMessage","isAuth","dialogsElements","map","d","messagesElements","msg","AddMessageReduxForm","onSubmit","values","newMessageBody","replace","reduxForm","form","props","handleSubmit","maxLengthCreator100","maxLengthCreator","Field","component","Textarea","placeholder","cols","rows","validate","required","style","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","WithAuthRedirect","Dialogs"],"sourceRoot":""}